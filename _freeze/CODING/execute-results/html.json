{
  "hash": "8fdc294bc5cd9d3839f79e6c29638399",
  "result": {
    "engine": "knitr",
    "markdown": "::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, here, dplyr, ggplot2, ggpointdensity, viridis, ggpubr, sf, tigris, patchwork, usmap,stats)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nCHLD <- read_csv(here('data','childcare_costs.csv'))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 34567 Columns: 61\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (61): county_fips_code, study_year, unr_16, funr_16, munr_16, unr_20to64...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nconty <- read_csv(here('data','counties.csv'))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 3144 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): county_name, state_name, state_abbreviation\ndbl (1): county_fips_code\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ncombine <- merge(CHLD,conty,by=c('county_fips_code'),all.x=T)\ncombine <- combine|>filter(!state_name%in%c(\"Hawaii\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot2::theme_set(ggplot2::theme_minimal(base_size = 10))\n\n# set width of code output\noptions(width = 65)\n\n# set figure parameters for knitr\nknitr::opts_chunk$set(\n  fig.width = 7,        # 7\" width\n  fig.asp = 0.618,      # the golden ratio\n  fig.retina = 3,       # dpi multiplier for displaying HTML output on retina\n  fig.align = \"center\", # center align figures\n  dpi = 300             # higher dpi, sharper image\n)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(combine,aes(x = pr_p, y = unr_16)) + \n  geom_point() +\n  geom_pointdensity() +\n  geom_abline (slope=1, linetype = \"dashed\", color=\"Red\") +\n  scale_color_viridis() +\n  labs(title = \"Family Pverty vs Unemployment Rate\",\n       subtitle = \"Considering all the counties\",\n       x = 'Family Poverty(%)',\n       y= 'Unemployment Rate (%)',\n       color = \"Density\\n\"\n       ) +\n  stat_cor(method = \"pearson\", label.x = 3, label.y = 30)\n```\n\n::: {.cell-output-display}\n![](CODING_files/figure-html/Ploting Scatter plot-1.png){fig-align='center' width=2100}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nchild_cost <- read.csv(here('Data','childcare_costs.csv'))\ncounties <- read.csv(here('Data','counties.csv'))\n\n# Calculate average unemployment\naveraged_unemployment <- child_cost %>%\n  group_by(county_fips_code) %>%\n  summarise(mean_unr_16 = mean(unr_16, na.rm = TRUE))\n\ncorrelation_data <- combine %>%\n  group_by(county_fips_code) %>%\n  summarize(correlation = cor(pr_p, unr_16))\n\n\n\n\ngeo_data <- counties %>%\n  select(county_fips_code, state_abbreviation) %>%\n  left_join(correlation_data, by = \"county_fips_code\")\n\nstate_correlation <- geo_data %>%\n  group_by(state_abbreviation) %>%\n  summarise(mean_cor_state = mean(correlation, na.rm = TRUE))\n\n# Rename 'state_abbreviation' to 'state' for compatibility with usmap\nstate_correlation <- state_correlation %>%\n  rename(state = state_abbreviation)\n\n# Plot the state-level map\nstate_map <- plot_usmap(data = state_correlation, values = \"mean_cor_state\", regions = \"states\") +\n  scale_fill_continuous(name = \"Correlation\", low = \"green\", high = \"red\", na.value = \"grey50\") +\n  labs(title = \"Average Correlation Rate by State\",\n       subtitle = \"Based on 'pr_p' and 'unr_16 variables from Childcare Costs Dataset\") +\n  theme_minimal() +\n  theme(legend.position = \"right\",\n        plot.title = element_text(hjust = 0.5, size = 16),\n        plot.subtitle = element_text(hjust = 0.5, size = 12),\n        legend.title = element_text(size = 12),\n        legend.text = element_text(size = 10))\n\n# Display the state-level map\nprint(state_map)\n```\n\n::: {.cell-output-display}\n![](CODING_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=2100}\n:::\n:::\n",
    "supporting": [
      "CODING_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}